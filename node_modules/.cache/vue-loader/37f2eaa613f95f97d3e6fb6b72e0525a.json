{"remainingRequest":"/home/fenil/work/projects/vue/furniture-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fenil/work/projects/vue/furniture-vue/src/components/HelloWorld.vue?vue&type=template&id=469af010&scoped=true&","dependencies":[{"path":"/home/fenil/work/projects/vue/furniture-vue/src/components/HelloWorld.vue","mtime":1644219762174},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}