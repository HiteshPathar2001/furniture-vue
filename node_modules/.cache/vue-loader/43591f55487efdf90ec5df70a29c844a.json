{"remainingRequest":"/home/fenil/work/projects/vue/furniture-vue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fenil/work/projects/vue/furniture-vue/src/components/Navbar.vue?vue&type=template&id=41458b80&scoped=true&","dependencies":[{"path":"/home/fenil/work/projects/vue/furniture-vue/src/components/Navbar.vue","mtime":1644572200975},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/cache-loader/dist/cjs.js","mtime":1643800811483},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1643800819023},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/cache-loader/dist/cjs.js","mtime":1643800811483},{"path":"/home/fenil/work/projects/vue/furniture-vue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1643800819023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}