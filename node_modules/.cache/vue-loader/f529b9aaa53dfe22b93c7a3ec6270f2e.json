{"remainingRequest":"/home/fenil/work/projects/furniture-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fenil/work/projects/furniture-vue/src/components/Navbar.vue?vue&type=template&id=41458b80&scoped=true&","dependencies":[{"path":"/home/fenil/work/projects/furniture-vue/src/components/Navbar.vue","mtime":1644813996902},{"path":"/home/fenil/work/projects/furniture-vue/node_modules/cache-loader/dist/cjs.js","mtime":1644813996118},{"path":"/home/fenil/work/projects/furniture-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644813996818},{"path":"/home/fenil/work/projects/furniture-vue/node_modules/cache-loader/dist/cjs.js","mtime":1644813996118},{"path":"/home/fenil/work/projects/furniture-vue/node_modules/vue-loader/lib/index.js","mtime":1644813996818}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}